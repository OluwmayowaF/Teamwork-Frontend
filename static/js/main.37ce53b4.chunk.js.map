{"version":3,"sources":["components/layout/Header.js","components/auth.js","components/apis.js","components/pages/login/loginForm.js","components/pages/login/welcome.js","components/pages/login/login.js","components/layout/sidebar.js","components/layout/Footer.js","components/elements/feed.js","components/pages/dashboard/liveFeed.js","components/pages/dashboard/dashboard.js","components/pages/createEmployee/createEmployee.js","components/pages/createEmployee/createEmployeePage.js","components/pages/addArticle/addArticleform.js","components/pages/addArticle/addArticle.js","components/pages/addGif/addGifForm.js","components/pages/addGif/addGif.js","components/pages/addGif/gifadd.js","components/elements/article.js","components/elements/comment.js","components/elements/articleControl.js","components/pages/article/viewArticle.js","components/elements/gif.js","components/elements/gifControl.js","components/pages/gif/viewGif.js","components/pages/dashboard/myposts.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","src","alt","authUser","JSON","parse","localStorage","getItem","saveUser","user","setItem","stringify","getToken","data","token","loggedIn","baseUrl","loginUrl","createEmployeeUrl","feedsUrl","myfeedsUrl","addArticleUrl","addGifUrl","viewArticleUrl","viewGifUrl","login","state","email","password","loginbtn","userError","emailError","passwordError","onChange","e","setState","target","name","value","validEmail","emailTest","test","length","style","border","validPassword","onSubmit","preventDefault","fetch","method","mode","headers","body","then","resp","json","status","props","history","push","error","swal","catch","err","console","log","this","htmlFor","type","placeholder","onBlur","required","Component","withRouter","welcome","width","height","float","paddingTop","UserName","role","onClick","logOut","Footer","clear","feed","title","url","article","id","date","liveFeed","feeds","loaded","map","key","createdon","authorId","authorid","margin","sizeUnit","size","color","loading","dashboard","Fragment","createEmployee","firstname","lastname","department","jobrole","gender","address","firstName","lastName","marginLeft","marginRight","addArticleform","padding","rows","category","loginUx","addArticle","loginBtn","onChangeArticle","tag","text","message","icon","articleId","addGifForm","gif","form","gifadd","onChangeGif","addGif","FormData","ref","el","paddingLeft","author","background","overflow","defaultValue","comment","articleControl","editArticle","buttons","dangerMode","willDelete","deleteArticle","viewArticle","addcomment","newcomment","commentAdded","editarticle","owner","componentDidMount","getArticle","checkOwner","ownerId","userId","articleid","match","params","ownerid","updatedArticle","addComment","commentBox","comments","createdOn","ownername","isOwner","commentid","gifControl","deleteGif","viewGif","getGif","thisUser","gifid","myposts","isloaded","App","removeItem","image","logout","exact","path","component","Login","render","ViewArticle","ViewGif","PostAgif","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37ce53b4.chunk.js","sourcesContent":["import React from 'react'\nimport '../../App.css';\nimport {Link} from 'react-router-dom'\n\n\n\nfunction Header() {\n    return (\n        \n       <nav className=\"navbar navbar-dark bg-dark\">\n        <Link className='nav'  to=\"/dashboard\">\n            <img className=\" navbar-brand\" src=\"https://res.cloudinary.com/oluwamayowaf/image/upload/v1574283398/TeamWorkFE/teamwork_fvc2kr.svg\" alt=\"logo\" />\n        </Link>\n        </nav>\n    )\n}\n\nexport default Header;\n","\n\n    export const authUser =  JSON.parse(localStorage.getItem('T_T_W'));\n\n    export const saveUser = (user) =>{\n        localStorage.setItem('T_T_W', JSON.stringify(user));\n        \n    }\n\n    export const getToken = () =>{\n        \n      const user =  JSON.parse(localStorage.getItem('T_T_W'))\n      const token = user.data.token\n      return token\n    }\n\n    export const loggedIn = () =>{\n       \n        if(localStorage.getItem('T_T_W') === null){\n            return false \n        }else {\n            return true\n        }\n    }\n\n    export const adminAuth = () => {\n        const adminRole = localStorage.getItem('T_T_W.role')\n        console.log(adminRole)\n    }\n\n    export const  logOut = () => {\n        localStorage.removeItem('T_T_W');\n        this.props.history.push('/login');\n        \n    }\n\n    export const signedInUser = () => {\n        const id = authUser.data.userId\n        console.log(id)\n        return id\n    }\n\n   \n\n    \n\n\n\n","const baseUrl = 'https://teamwork-be-api.herokuapp.com/api/v1'\n//const baseUrl = 'http://localhost:3000/api/v1'\n\n\nexport const loginUrl = `${baseUrl}/auth/signin`\n\nexport const createEmployeeUrl = `${baseUrl}/auth/create-user`\n\nexport const feedsUrl = `${baseUrl}/feeds`\n\nexport const myfeedsUrl = `${baseUrl}/userfeeds`\n\nexport const addArticleUrl = `${baseUrl}/articles`\n\nexport const addGifUrl = `${baseUrl}/gifs`\n\nexport const viewArticleUrl = `${baseUrl}/articles/`\n\nexport const viewGifUrl = `${baseUrl}/gifs/`\n\nexport const GetAUserUrl = `${baseUrl}/auth/user/`\n\n\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { saveUser }   from '../../auth';\nimport { loginUrl } from '../../apis'\nimport swal from '@sweetalert/with-react'\n\n\n\n\nexport class login extends Component {\n    state = {\n        user: [\n         { email: '',\n           password: '',\n          }\n        ],\n        loginbtn: 'LOGIN',\n        userError: false,\n        emailError: false,\n        passwordError: false,\n\n    }\n\n    onChange = (e) => {\n       \n        this.setState({[e.target.name]: e.target.value})       \n    }\n   \n   \n    // Validate Form \n\n    validEmail= (e) => {\n        const emailTest  = /\\S+@\\S+\\.\\S+/.test(e.target.value);\n        if (e.target.value.length < 1 ){\n            e.target.style.border = '2px solid red';\n            this.setState({emailError: true});\n            return false;\n        } \n        if (emailTest === false){\n            e.target.style.border = '2px solid red';\n            this.setState({emailError: true});\n            return false;\n        } else {\n            e.target.style.border = '2px solid #90EE90';\n            this.setState({emailError: false});\n            return true;\n        }\n        \n    }\n    validPassword= (e) => {\n        if (e.target.value.length < 1 ){\n            e.target.style.border = '2px solid red';\n            this.setState({passwordError: true});\n            return false;\n        } else {\n            e.target.style.border = '2px solid #90EE90';\n            this.setState({passwordError: false});\n            return true;\n        }\n        \n    }\n    \n\n    onSubmit = (e) => { \n    e.preventDefault();\n    if(this.validEmail !== false && this.validPassword !== false){\n        this.setState({loginbtn: 'Loading...'})\n        \n        fetch(loginUrl, {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n          body: JSON.stringify({ \n            email: this.state.email,\n            password: this.state.password \n        }),\n          \n        })\n       .then(resp => resp.json())\n        .then(data => {\n            this.setState({loginbtn: 'LOGIN'})\n    \n            if(data.status === 'success' ){\n                saveUser(data)\n              \n                this.props.history.push('/dashboard');\n            }else if(data.error === 'Invalid Credentials' ){\n                this.setState({userError: true});\n            }\n            else{\n                swal(\n                    <div>\n                      <h3>Something doesn't seem right</h3>        \n                      <p>Please check your internet connection and try again</p>\n                    </div>\n                  )\n            }          \n            \n        })\n        .catch(err => {\n            this.setState({loginbtn: 'LOGIN'})\n            if(err) {\n                swal(\n                    <div>\n                      <h3>Something doesn't seem right</h3>        \n                      <p>Please check your internet connection and try again</p>\n                    </div>\n                  )\n            }\n        })\n\n    } else{\n        console.log('go and fill those fielsds guy')\n    } \n  \n    \n}     \n    render() {   \n        return (\n            <div> \n                <h3 className=\"text-left col-md-12\" >Login</h3>\n                <p className=\"text-left col-md-12\" >Contact the IT department for your login credentials</p>\n                \n                <form onSubmit ={this.onSubmit}>\n                <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <input type= \"text\"\n                name = \"email\" \n                placeholder=\"Enter your email address...\"\n                value={this.state.user.email}\n                onChange={this.onChange}\n                onBlur={this.validEmail}\n                className=\"form-control\"\n                required/>\n                <div >{\n                    this.state.emailError  ?  \n                    <p className=\"error-message\">A valid email is required to login</p>\n                    : null \n                }</div>\n                </div>\n               \n                <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input type= \"password\"\n                name = \"password\" \n                placeholder=\"Enter your password\"\n                value={this.state.user.password}\n                onChange={this.onChange} \n                onBlur={this.validPassword}\n                className=\"form-control\"\n                required/>\n                <div>{\n                    this.state.passwordError  ?  \n                    <p className=\"error-message\">Password is required to login</p>\n                    : null \n                }</div>\n                <br />\n                </div>\n               \n                <div className=\"form-group\">\n                <input type=\"submit\"\n                value={this.state.loginbtn}\n                className=\"Login-btn\"\n                />\n                </div>\n                {\n                    this.state.userError  ?  \n                    <p className=\"error-message\">The email or password provided is incorrect please try again</p>\n                    : null \n                }\n                \n                </form>\n            \n           \n            </div>\n        )\n    }\n    \n}\n\nexport default withRouter(login)\n","import React from 'react';\nimport '../../../App.css';\n\n\nfunction welcome() {\n    return (\n        <div>\n           \n            <h3>Welcome to Teamwork</h3>\n            <br />\n            <h4 >Share thoughts that\n            matter to you with your\n            colleagues!\n            </h4>\n\n          \n           \n           \n            \n        </div>\n    )\n}\n\nexport default welcome;\n","import React from 'react';\nimport LoginForm from './loginForm';\nimport Welcome from './welcome';\nimport {Redirect} from 'react-router-dom';\nimport { loggedIn }   from '../../auth';\n\n\nexport default function login() {\n\n  \n    return (\n        <div className=\"container-fluid \">\n      \n            <div className=\"row Main-login\">\n            {\n            loggedIn() === true ? \n             <Redirect to=\"/dashboard\" />\n            : null\n            }\n            <div className=\"col-lg-3\">\n                </div>\n                <div className =\"col-lg-3 Login-form-container  \">\n                    <LoginForm />\n                </div>\n                <div className=\"col-lg-3 Welcome-message-container \" >\n                    <Welcome />\n                </div>\n                <div className=\"col-lg-3\">\n                </div>     \n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { authUser } from '../auth'\n\n\n\n\nfunction sidebar(props) {\n    \n    return (\n        <aside className=\"col-md-2 d-none d-md-block bg-light sidebar\" style={{width:'20%', height:'100vh', float:'left', paddingTop:'100px'}}  >\n        <div className=\"sidebar-stick\"  >\n        <ul className=\"nav flex-column\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link pb-5\" to=\"/dashboard/createEmployee\">\n                <h3 className='text-center'>Hi, {props.UserName}\n                </h3>\n                </Link>\n          </li>\n          \n          <li className=\"nav-item pb-3\">\n          <Link className=\"nav-link text-center\" to=\"/dashboard\">\n                 Home\n                </Link>\n          </li>\n          <li className=\"nav-item pb-3\">\n          <Link className=\"nav-link text-center\" to=\"/dashboard/myposts\">\n                 My Posts\n                </Link>\n          </li>\n         \n          {\n                authUser.data.role === 'admin' ?\n                <li className=\"nav-item pb-3\">\n                <Link className=\"nav-link text-center\" to=\"/dashboard/createEmployee\">\n                Create<br /> Employee\n                </Link>\n                </li>: null\n\n                }\n         \n          <li className=\"nav-item pb-3 text-center\">\n          <Link className=\"nav-link\" to=\"/dashboard/postarticle\">\n               Add Article\n               </Link>\n          </li>\n          <li className=\"nav-item pb-3 text-center\">\n          <Link className=\"nav-link\" to=\"/dashboard/postgif\">\n                \n               \n                Add Gif\n                </Link>\n          </li>\n          <li className=\"nav-item pb-3 text-center\">\n          <Link className=\"av-link\" onClick={props.logOut} to=\"#\">\n                \n               \n                Logout\n                </Link>\n            </li>\n        </ul>\n\n        </div>\n    </aside>\n        \n    )\n\n   \n}\n//Proptypes\nsidebar.propTypes = {\n    logOut: PropTypes.func.isRequired\n \n}\n\n\nexport default withRouter(sidebar);\n","import React from 'react'\nimport '../../App.css'\n\nfunction Footer() {\n    return (\n <footer  className=\"py-4 bg-dark text-white-50\" style={{clear:'both'}}>\n    <div className=\" text-center\">\n      <small>Copyright &copy; Teamwork</small>\n    </div>\n  </footer>\n       \n      \n    )\n}\n\nexport default Footer;\n","import React from 'react';\nimport '../../App.css';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n// import * as moment from 'moment';\n\n\nfunction feed(props) {\n   \n  /*  const dateString = (time) =>{\n        let day = moment([time]);\n        return day \n      //let  post = new Date();\n       //return   moment.format(time)\n    }*/\n   \n    return (\n        \n        <div className=\"container pt-5\" style={{width:'80%', float:'right'}}>\n        <div className='row'>\n        <div className='col-1'></div>\n       <div className=\"articleContainer col-8\">\n\n       \n            <h4 className=\"text-primary\"> Title: {props.title}</h4>\n           \n            <div className=\"\">\n            {\n                props.url  ?  \n                <img className=\"center-block\" src={props.url} alt='gifImage'></img>\n                : <p className=\"text-wrap text-truncate\" >{props.article}  </p>                \n            }\n            {\n                props.url  ?  \n                <Link style={{float:'right'}} to={`/dashboard/gif/${props.id}`}>View More</Link> \n                :  <Link  style={{float:'right'}} to={`/dashboard/article/${props.id}`}>View More</Link>  \n\n               }\n            </div>\n            <p className=\"text-dark\"><Moment date={props.date}/>   </p>\n           \n               </div>\n               <div className='col-3'></div>\n               </div>\n        </div>\n        \n        \n    )\n}\n\nexport default feed;","import React, { Component } from 'react';\nimport Feeds from '../../elements/feed'\nimport { getToken }   from '../../auth';\n//import { signedInUser }   from '../../auth';\nimport { Redirect } from 'react-router-dom'\nimport { feedsUrl } from '../../apis'\nimport swal from '@sweetalert/with-react'\nimport { ClipLoader } from 'react-spinners';\n\n\nexport class liveFeed extends Component {\n    state={\n      feeds :[\n\n      ],\n      loaded: false,\n    }\n\n\n  componentDidMount(){\n  //  signedInUser()\n   const token = getToken();\n    fetch(feedsUrl, {\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        \"Accept\": \"aplication/json\",\n        \"Authorization\": token\n    }\n    })\n    .then(resp => resp.json())\n    .then(data => { \n      if (data){\n        this.setState({feeds: data.data})\n        this.setState({loaded:true})\n        \n      } if (data.status === '401'){\n        return   <Redirect to=\"/login\" />\n      } if (!data){\n        console.log('Nothing to see here')\n      }\n    })\n    .catch(err => {\n      if(err) {\n          swal(\n              <div>\n                <h3>Something doesn't seem right</h3>        \n                <p>Please check your internet connection and try again</p>\n              </div>\n            )\n      }\n  })\n\n   \n  }\n    render() {\n        return (\n          <div >\n            {\n            this.state.loaded ?\n            this.state.feeds.map((feed , key) =>(\n            <div key = {\n              feed.url ? 'gif'+feed.id : 'article'+feed.id\n            }>\n            <Feeds \n            id={feed.id} \n            article = {feed.article}  \n            title={feed.title} \n            url={feed.url}\n            date={feed.createdon}\n            authorId={feed.authorid}/>\n            </div>\n            )):<div className='sweet-loading' style={{margin:'20% 50%'}}>\n            <ClipLoader\n             //css={override}\n              sizeUnit={\"px\"}\n               size={200}\n              color={'#0659FB'}\n               loading={this.state.loading}\n               />\n      </div> \n            }\n          </div>\n        )\n    }\n   \n        \n}\n\nexport default liveFeed\n\n","import React, { Component } from 'react';\nimport Sidebar from '../../layout/sidebar'\nimport Footer from '../../layout/Footer'\nimport { Redirect } from 'react-router-dom';\nimport LiveFeed from './liveFeed'\nimport '../../../App.css';\nimport { loggedIn }   from '../../auth';\nimport PropTypes from 'prop-types';\n\n\n\nexport class dashboard extends Component {\n\n    render() {\n        return (\n            \n\n            <React.Fragment>\n            \n            {\n            loggedIn() === false ? <Redirect to=\"/login\" /> : null\n            }\n            <Sidebar logOut={this.props.logOut} UserName={this.props.UserName} />\n            \n                <LiveFeed />\n                <Footer />\n               \n                \n               \n            </React.Fragment>\n           \n        )\n    }\n}\n\n//Proptypes\ndashboard.propTypes = {\n    logOut: PropTypes.func.isRequired\n \n}\n\nexport default dashboard\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../../../App.css';\nimport { createEmployeeUrl } from '../../apis'\n\nexport class createEmployee extends Component {\n    state = {\n                firstname: '',\n                lastname: '',\n                email: '',\n                password: '',\n                department: '',\n                jobrole: '',\n                gender: '',\n                address: ''\n    }\n\n    // Set state \n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})       \n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        fetch(createEmployeeUrl,{\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\",\n          },\n          body: JSON.stringify({ \n            firstName: this.state.firstname,\n            lastName: this.state.lastname,\n            email: this.state.email,\n            password: this.state.password,\n            department: this.state.department,\n            jobrole: this.state.jobrole,\n            gender: this.state.gender,\n            address: this.state.address\n        }),\n          })\n\n          .then(resp => resp.json())\n          .then(data => { console.log(data)})\n    }\n\n\n    //\n    render() {\n        return (\n            <div  style={{marginLeft:\"250px\", marginRight:\"150px\"}}>\n            <form onSubmit ={this.onSubmit}>\n            <div className=\"form-group col-xs-10 col-sm-6 col-md-6 col-lg-6\">\n                <label htmlFor=\"firstname\">Firstname</label>\n                <input type= \"text\"\n                name = \"firstname\" \n                placeholder=\"Employee's firstname\"\n                className=\"form-control\"\n                onChange={this.onChange} \n                value={this.state.firstname}\n                required/>\n               \n                </div><div className=\"form-group col-xs-10 ccol-sm-6 col-md-6 col-lg-6\">\n                <label htmlFor=\"lastname\">Lastname</label>\n                <input type= \"text\"\n                name = \"lastname\" \n                placeholder=\"Employee's lastname\"\n                className=\"form-control\"\n                onChange={this.onChange} \n                value={this.state.lastname}\n                required/>\n               \n                </div>\n                <div className=\"form-group col-xs-10 col-sm-6 col-md-6 col-lg-6\">\n                <label htmlFor=\"email\">Email</label>\n                <input type= \"text\"\n                name = \"email\" \n                placeholder=\"Employee's email\"\n                className=\"form-control\"\n                onChange={this.onChange} \n                value={this.state.email}\n                required/>\n               \n                </div>\n               \n                <div className=\"form-group col-xs-10 col-sm-6 col-md-6 col-lg-6\">\n                <label htmlFor=\"password\">Password</label>\n                <input type= \"password\"\n                name = \"password\" \n                placeholder=\"Employee's password\"\n                onChange={this.onChange} \n                value={this.state.password}\n                className=\"form-control\"\n                required/>\n               \n              \n                </div><div className=\"form-group col-xs-10 col-sm-6 col-md-6 col-lg-6\">\n                <label htmlFor=\"department\">Department</label>\n                <input type= \"text\"\n                name = \"department\" \n                placeholder=\"Employee's Department\"\n                className=\"form-control\"\n                onChange={this.onChange} \n                value={this.state.department}\n                required/>\n               \n                </div><div className=\"form-group col-xs-10 col-sm-6 col-md-6 col-lg-6\">\n                <label htmlFor=\"jobrole\">JobRole</label>\n                <input type= \"text\"\n                name = \"jobrole\" \n                placeholder=\"Employee's jobrole\"\n                className=\"form-control\"\n                onChange={this.onChange} \n                value={this.state.jobrole}\n                />\n               \n                    </div><div className=\"form-group col-xs-10 col-sm-6 col-md-6 col-lg-6\">\n                <label htmlFor=\"gender\">Gender</label>\n                <select className=\"form-control\"  name=\"gender\"  value={this.state.gender}  onChange={this.onChange} >\n                    <option>Choose your gender</option>\n                    <option>Female</option>\n                    <option>Male</option>\n                    <option>Prefer not to say</option>\n                </select>\n                </div>\n               \n                <div className=\"form-group col-xs-10 col-sm-6 col-md-6 col-lg-6\">\n                <label htmlFor=\"address\">Adddress</label>\n                <input type= \"textarea\"\n                name = \"address\" \n                placeholder=\"Employee address\"\n                className=\"form-control\"\n                value={this.state.address}\n                onChange={this.onChange} \n                />\n               \n                </div>\n               \n                <div className=\"form-group\">\n                <input type=\"submit\"\n              value=\"Submit\"\n                className=\"Login-btn\"\n                />\n                </div>\n                \n                </form>\n                \n                \n            </div>\n        )\n    }\n}\n\nexport default withRouter(createEmployee)\n","import React from 'react';\n//import Sidebar from '../../layout/sidebar'\nimport CreateEmployee from './createEmployee'\nimport { withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n//import { loggedIn }   from '../../auth';\nimport '../../../App.css';\n\nfunction createEmployeePage(props) {\n    return (\n        <div>\n       \n           \n            <CreateEmployee />\n        </div>\n    )\n}\n\n//Proptypes\ncreateEmployeePage.propTypes = {\n    logOut: PropTypes.func.isRequired\n \n}\nexport default withRouter(createEmployeePage)\n","import React from 'react'\n\nexport default function addArticleform(props) {\n    return (\n        <div  style={{width: '80%', float:'right', padding:'5%'}}>\n            <h4 className='text-center text-primary'>Add an Article</h4>\n            <form onSubmit ={props.onSubmit}>\n                <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input type= \"text\"\n                name = \"title\" \n                placeholder=\"Article Title\"\n                value={props.title}\n                onChange={props.onChange}\n                className=\"form-control\"\n                required/>\n                </div>\n               \n                <div className=\"form-group\">\n                <label htmlFor=\"article\">Article</label>\n                <textarea \n                name = \"article\" \n                placeholder=\"Start Writting...\"\n                rows='5'\n                value={props.article}\n                onChange={props.onChange} \n                className=\"form-control\"\n                required/>\n                <br />\n                </div>\n\n                <div className=\"form-group\">\n                <label htmlFor=\"category\">Category</label>\n                <input type= \"text\"\n                name = \"category\" \n                placeholder=\"Optional enter a category\"\n                value={props.category}\n                onChange={props.onChange}\n                className=\"form-control\"\n                required/>\n                </div>\n\n\n               \n                <div className=\"form-group\">\n                <input type=\"submit\"\n                value={props.loginUx}\n                className=\"Login-btn\"\n                />\n                </div>\n                \n                </form>\n\n            \n        </div>\n    )\n}\n","import React, {Component} from 'react';\nimport { withRouter, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport Sidebar from '../../layout/sidebar';\nimport { loggedIn }   from '../../auth';\nimport AddArticleForm from './addArticleform';\nimport { addArticleUrl     } from '../../apis';\nimport { getToken  } from '../../auth';\n// import ClipLoader from 'react-spinners/ClipLoader';\nimport swal from 'sweetalert'\n\n\nexport class addArticle extends Component{\n    state ={\n        title: '',\n        article: '',\n        category: 'General',\n        loginBtn: 'Post Article',\n    }\n\n    onChangeArticle = (e) => {\n        this.setState({[e.target.name]: e.target.value})    \n\n    }\n\n\n    addArticle = (e) => {\n        this.setState({loginBtn: 'Posting..'\n      })\n        e.preventDefault();\n        const token = getToken();\n        fetch(addArticleUrl, \n            {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n                \"Authorization\": token\n            },\n            body: JSON.stringify({ \n                title: this.state.title,\n                article: this.state.article,\n                tag: this.state.category,\n            }),\n            })\n\n            .then(resp => resp.json())\n            .then(data => { \n                this.setState({loginBtn: 'Post Article'})\n                if (data.status === 'error'){\n                swal({\n                    \n                    text: `${data.message}`,\n                    icon: \"error\",\n                  });\n                console.log(data)\n                }if (!data){\n                    swal({\n                    \n                        text: `Something went wrong check your internet connection and try again`,\n                        icon: \"error\",\n                      });\n                    console.log(data)\n\n                }else{\n                    this.setState({  title: '',\n                        article: '' })\n                    swal({\n                    \n                        text: `${data.data.message}`,\n                        icon: \"success\",\n                      });\n                    this.props.history.push(`/dashboard/article/${data.data.articleId}`)\n                    console.log(data.data)\n\n                }\n            })\n        }\n\n    render(){\n    return (\n        <div>\n        {\n            loggedIn() === false ? <Redirect to=\"/login\" /> : null\n            }\n            <Sidebar />\n          \n            <AddArticleForm  title={this.state.title} article={this.state.article} category={this.state.category} \n            onChange={this.onChangeArticle}  onSubmit={this.addArticle} loginUx={this.state.loginBtn} />\n            \n            \n        </div>\n    )\n  }\n}\n\n//Proptypes\naddArticle.propTypes = {\n    logOut: PropTypes.func.isRequired\n \n}\n\nexport default withRouter(addArticle)","import React from 'react'\n\nexport default function addGifForm(props) {\n    return (\n        <div style={{width: '80%', float:'right', padding:'5%'}}>  \n        <h4 style={{width:'50%'}} className='text-center text-primary'>Post Gif</h4>\n        <form onSubmit ={props.onSubmit} style={{width:'50%'}} >\n                <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input type= \"text\"\n                name = \"title\" \n                placeholder=\"Article Title\"\n                value={props.title}\n                onChange={props.onChange}\n                className=\"form-control\"\n                />\n                </div>\n               \n                <div className=\"form-group\">\n                <label htmlFor=\"gif\">Gif</label>\n                <input type=\"file\" name='gif' value={props.gif}\n                onChange={props.onChange} className=\"form-control-file\" />\n                <br />\n                </div>\n\n\n               \n                <div className=\"form-group\">\n                <input type=\"submit\"\n                value='submit'\n                className=\"Login-btn\"\n                />\n                </div>\n                \n                </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport { withRouter, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport Sidebar from '../../layout/sidebar'\nimport { loggedIn }   from '../../auth';\nimport AddGifForm from './addGifForm';\n\nfunction addGif(props) {\n    return (\n        \n        <div>\n        {\n            loggedIn() === false ? <Redirect to=\"/login\" /> : null\n            }\n          \n            <Sidebar />\n            <AddGifForm  title={props.title} gif={props.gif}  form={props.form}\n            onChange={props.onChange}  onSubmit={props.onSubmit}  />\n            \n            \n        </div>\n            \n        \n    )\n}\n//Proptypes\naddGif.propTypes = {\n    logOut: PropTypes.func.isRequired\n \n}\n\nexport default withRouter(addGif)\n","import React, { Component } from 'react';\nimport { addGifUrl,   } from '../../apis'\nimport { getToken } from '../../auth'\n\nexport class gifadd extends Component {\n    onChangeGif = (e) => {\n        this.setState({[e.target.name]: e.target.value})    \n\n    }\n   \n\n    addGif = (e) => {\n        e.preventDefault();\n       \n       \n        \n       const token = getToken();\n        const body =  new FormData(this.form);\n        fetch(addGifUrl, \n            {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                  \n                    \"Authorization\": token\n                },\n                body\n                \n                })\n    \n                .then(resp => resp.json())\n                .then(data => { console.log(data)})\n        }\n    render() {\n        return (\n            <div>\n            <form ref={el => (this.form = el)} onSubmit ={this.addGif} style={{width: '80%', paddingTop:'100px', paddingLeft:'200px'}}>\n                <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input type= \"text\"\n                name = \"title\" \n                placeholder=\"Article Title\"\n                className=\"form-control\"\n                />\n                </div>\n               \n                <div className=\"form-group\">\n                <label htmlFor=\"gif\">Gif</label>\n                <input type=\"file\" name='image' \n                className=\"form-control-file\" />\n                <br />\n                </div>\n\n\n               \n                <div className=\"form-group\">\n                <input type=\"submit\"\n                value='submit'\n                className=\"Login-btn\"\n                />\n                </div>\n                \n                </form>\n                \n            </div>\n        )\n    }\n}\n\nexport default gifadd\n","import React from 'react';\n\nexport default function article(props) {\n    return (\n            <div className=\"articleContainer\" >\n              <h4>Title:{props.title}</h4>\n              <p >Written By: {props.author}</p>\n              <div className=\"form-group\">\n              <textarea style={{background:'none', border:'none', overflow:'auto'}} \n              className=\"form-control\" rows=\"3\" name=\"editarticle\" \n              defaultValue={props.article}\n              onChange={props.onChange}\n              >\n              </textarea>\n             \n            </div>\n          </div>\n    )\n}\n","import React from 'react'\n\nexport default function comment(props) {\n    return (\n        <div>\n            <div className='articleContainer'>\n                <p key={props.id}>{props.comment}</p>\n               \n            </div>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport swal from 'sweetalert'\n\nexport default function articleControl(props) {\n\n    const confirmDelete = () =>{\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((willDelete) => {\n            if (willDelete) {\n                props.deleteArticle()\n            } \n          });\n    }\n    return (\n        <React.Fragment>\n          <button onClick={props.editArticle}>Edit</button>  \n          <button onClick={confirmDelete}>Delete</button>\n        </React.Fragment>\n    )\n}\n","import React, { Component } from 'react'\nimport Article from '../../../components/elements/article'\nimport Comment from '../../../components/elements/comment'\nimport Sidebar from '../../layout/sidebar'\nimport ArticleControl from '../../elements/articleControl'\nimport { viewArticleUrl } from '../../../components/apis'\nimport { getToken, authUser , loggedIn} from '../../auth'\nimport { Redirect } from 'react-router-dom';\nimport swal from '@sweetalert/with-react'\nimport {ClipLoader} from 'react-spinners'\n\n\nexport class viewArticle extends Component {\n\n    state ={\n        article:null,\n        loaded:false,\n        addcomment:' ',\n        newcomment:null,\n        commentAdded:false,\n        editarticle:'',\n        owner:false,\n    }\n\n    token = getToken();\n\n    componentDidMount =() => {\n        this.getArticle();\n        this.checkOwner();\n        \n\n    }\n\n    checkOwner = (ownerId) =>{\n        const thisUser = authUser.data.userId \n        if (thisUser === ownerId){\n        this.setState({owner: true})\n        }\n    }\n  \n\n    getArticle = () => {\n        const {articleid} = this.props.match.params\n        try{\n            fetch(viewArticleUrl+articleid, {\n                method:'GET',\n                mode: 'cors',\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                    \"Authorization\": this.token\n                },\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                if (data){ \n                    this.setState({article: data.data})\n                    this.checkOwner(this.state.article.ownerid)\n                    this.setState({loaded: true})\n                }\n            })\n\n\n        }catch(error){\n            swal(\n                <div>\n                  <h3>Something doesn't seem right</h3>        \n                  <p>Please check your internet connection and try again</p>\n                </div>\n              )\n        }\n    }\n    updatedArticle = (e) => {\n        this.setState({[e.target.name]: e.target.value})    \n\n    }\n\n    editArticle =(e) => {\n        e.preventDefault();\n        const token = getToken();\n        const {articleid} = this.props.match.params\n        try{\n            fetch(viewArticleUrl+articleid, {\n                method:'PATCH',\n                mode: 'cors',\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                    \"Authorization\": token\n                },\n                body: JSON.stringify({ \n                  article: this.state.editarticle,\n              }),\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                if (data){\n                    this.getArticle()\n                    console.log(data.data)\n                  \n                }\n            })\n\n        }catch{\n\n        }\n\n\n    }\n\n   \n\n\n    addComment = (e) => {\n        e.preventDefault();\n        const token = getToken();\n        const {articleid} = this.props.match.params\n        try{\n            fetch(viewArticleUrl+articleid+'/comment', {\n                method:'POST',\n                mode: 'cors',\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                    \"Authorization\": token\n                },\n                body: JSON.stringify({ \n                  comment: this.state.addcomment,\n              }),\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                if (data){\n                    this.getArticle()\n                    this.setState({newcomment: data})\n                    this.setState({commentAdded: true})\n                    console.log(data.data)\n                  \n                }\n            })\n\n        }catch{\n\n        }\n\n    }\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})    \n\n    }\n\n    deleteArticle = (e) => {\n        //e.preventDefault();\n        const token = getToken();\n        const {articleid} = this.props.match.params\n        try{\n            fetch(viewArticleUrl+articleid, {\n                method:'DELETE',\n                mode: 'cors',\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                    \"Authorization\": token\n                },\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                if (data){\n                    swal(`${data.data.message}`, {\n                        icon: \"success\",\n                      });\n                   console.log(data)\n                       this.props.history.push(\"/dashboard\")\n                  \n                }\n            })\n\n        }catch{\n\n        }\n\n\n    }\n\n    render() {\n        return (\n            <div >\n            {\n            loggedIn() === false ? <Redirect to=\"/login\" /> : null\n            }\n            <Sidebar style={{width:'10%',  float:'right'}}  />\n            <div className=\"container \"  style={{float:'right', width:'80%'}}>\n                {\n                   \n                    this.state.loaded ?\n                    <Article  \n                    id={this.state.article.id}\n                    title={this.state.article.title}\n                    article={this.state.article.article}\n                    comment={this.state.article.comments}\n                    date={this.state.article.createdOn}\n                    onChange={this.updatedArticle}\n                    author = {this.state.article.ownername}\n                    isOwner={this.state.owner}\n                    />\n                   :\n                   <div className='sweet-loading' style={{margin:'20% 50%'}}>\n              <ClipLoader\n             //css={override}\n              sizeUnit={\"px\"}\n               size={200}\n              color={'#0659FB'}\n               loading={this.state.loading}\n               />\n      </div> \n                }{\n                    this.state.owner ?\n                    <ArticleControl \n                    editArticle={this.editArticle}\n                    deleteArticle={this.deleteArticle}\n                    />:null\n                }\n                {  this.state.loaded ?\n                    typeof this.state.article.comments === 'object' ? \n                    this.state.article.comments.map((comment ) =>(\n                <Comment\n                id = {comment.commentid} \n                comment={comment.comment}\n                authorid={comment.authorid}\n                />\n                ))\n                    :<p>{this.state.article.comments}</p>\n                    :\n                    null\n                }\n               \n                <form onSubmit={this.addComment}>\n                    <input style={this.commentBox} name='addcomment'type='text'\n                    value={this.state.addcomment}\n                    onChange={this.onChange}>\n                    </input>\n\n                    <button>Comment</button>\n\n                </form>\n                </div>\n            </div>\n        )}  \n\n         commentBox = {\n            \n\n        }\n}\n\nexport default viewArticle\n","import React from 'react'\n\nexport default function gif(props) {\n    return (\n        <div>\n            <h3>{props.title}</h3>\n            <img src={props.url} alt='gifImage'></img>\n        </div>\n    )\n}\n","import React from 'react'\nimport swal from '@sweetalert/with-react'\n\nexport default function gifControl(props) {\n    const confirmDelete = () =>{\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((willDelete) => {\n            if (willDelete) {\n                props.deleteGif()\n            } \n          });\n    }\n    return (\n        <React.Fragment>\n          <button onClick={confirmDelete}>Delete</button>\n        </React.Fragment>\n    )\n}\n","import React, { Component } from 'react'\nimport Gif from '../../../components/elements/gif'\nimport Comment from '../../../components/elements/comment'\nimport GifControl from '../../elements/gifControl'\nimport { viewGifUrl } from '../../../components/apis'\nimport { getToken, authUser , loggedIn} from '../../auth'\nimport { Redirect } from 'react-router-dom';\nimport swal from '@sweetalert/with-react';\nimport Sidebar from '../../layout/sidebar'\n\nexport class viewGif extends Component {\n\n    state ={\n        gif:null,\n        loaded:false,\n        addcomment:' ',\n        newcomment:null,\n        commentAdded:false,\n        owner:false,\n    }\n\n    componentDidMount = () =>{\n        this.getGif()\n        this.checkOwner()\n    }\n\n    checkOwner = (ownerId) =>{\n        const thisUser = authUser.data.userId \n        if (thisUser === ownerId){\n        this.setState({owner: true})\n        console.log(thisUser)\n        console.log(ownerId)\n            \n        }\n\n    }\n\n    getGif =() =>{\n        const token = getToken();\n        const {gifid} = this.props.match.params\n\n        fetch(viewGifUrl+gifid, {\n            method: 'GET',\n            mode: 'cors',\n            headers:{\n                \"Content-type\": \"application/json; charset=UTF-8\",\n                \"Authorization\": token\n            },\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            this.setState({\n                gif:data.data\n            })\n            this.checkOwner(this.state.gif.ownerid)\n            this.setState({\n                loaded:true\n            })\n            console.log(this.state.gif)\n        })\n    }\n\n\n    addComment = (e) => {\n        e.preventDefault();\n        const token = getToken();\n        const {gifid} = this.props.match.params\n        try{\n            fetch(viewGifUrl+gifid+'/comment', {\n                method:'POST',\n                mode: 'cors',\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                    \"Authorization\": token\n                },\n                body: JSON.stringify({ \n                  comment: this.state.addcomment,\n              }),\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                if (data){\n                    this.getGif()\n                    this.setState({newcomment: data})\n                    this.setState({commentAdded: true})\n                    console.log(data.data)\n                  \n                }\n            })\n\n        }catch{\n\n        }\n\n    }\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})    \n\n    }\n\n    deleteGif = (e) => {\n        //e.preventDefault();\n        const token = getToken();\n        const {gifid} = this.props.match.params\n        try{\n            fetch(viewGifUrl+gifid, {\n                method:'DELETE',\n                mode: 'cors',\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                    \"Authorization\": token\n                },\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                if (data){\n                    swal(`${data.data.message}`, {\n                        icon: \"success\",\n                      });\n                   console.log(data)\n                       this.props.history.push(\"/dashboard\")\n                  \n                }\n            })\n\n        }catch{\n\n        }\n\n\n    }\n\n\n    render() {\n        return (\n            <div >\n            {\n            loggedIn() === false ? <Redirect to=\"/login\" /> : null\n            }\n            <Sidebar style={{width:'10%',  float:'right'}}  />\n            <div className=\"container\"  style={{float:'right', width:'80%'}}>\n                {\n                    this.state.loaded ?\n                    <React.Fragment>\n                    <Gif \n                id={this.state.gif.id}\n                date={this.state.gif.createdOn}\n                title={this.state.gif.title}\n                url={this.state.gif.url}\n                />\n                <form onSubmit={this.addComment}>\n                    <input style={this.commentBox} name='addcomment'type='text'\n                    value={this.state.addcomment}\n                    onChange={this.onChange}>\n                    </input>\n\n                    <button>Comment</button>\n\n                </form>\n                </React.Fragment>\n                :null\n\n                }\n                {\n                    this.state.owner ?\n                    <GifControl \n                    \n                    deleteGif={this.deleteGif}\n                    />:null\n                }\n                {  this.state.loaded ?\n                    typeof this.state.gif.comments === 'object' ? \n                    this.state.gif.comments.map((comment ) =>(\n                <Comment\n                id = {comment.commentid} \n                comment={comment.comment}\n                authorid={comment.authorid}\n                />\n                ))\n                    :<p>{this.state.gif.comments}</p>\n                    :\n                    null\n                }\n              \n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default viewGif\n","import React, { Component } from 'react';\nimport Feeds from '../../elements/feed'\nimport { getToken }   from '../../auth';\n//import { signedInUser }   from '../../auth';\nimport { Redirect } from 'react-router-dom'\nimport { myfeedsUrl } from '../../apis'\nimport swal from '@sweetalert/with-react'\nimport { ClipLoader } from 'react-spinners';\nimport Sidebar from '../../layout/sidebar'\n\n\nexport class myposts extends Component {\n    state={\n      feeds :[\n\n      ],\n      isloaded: false,\n    }\n\n\n  componentDidMount(){\n  //  signedInUser()\n   const token = getToken();\n    fetch(myfeedsUrl, {\n      method: 'GET',\n      mode: 'cors',\n      headers: {\n        \"Accept\": \"aplication/json\",\n        \"Authorization\": token\n    }\n    })\n    .then(resp => resp.json())\n    .then(data => { \n      if (data){\n        this.setState({feeds: data.data})\n        this.setState({isloaded:true})\n        \n      } if (data.status === '401'){\n        return   <Redirect to=\"/login\" />\n      } if (!data){\n        console.log('Nothing to see here')\n      }\n    })\n    .catch(err => {\n      if(err) {\n          swal(\n              <div>\n                <h3>Something doesn't seem right</h3>        \n                <p>Please check your internet connection and try again</p>\n              </div>\n            )\n      }\n  })\n\n   \n  }\n    render() {\n        return (\n          <React.Fragment >\n          <Sidebar logOut={this.props.logOut}  />\n          <div>\n            {\n            this.state.isloaded \n            ?\n            this.state.feeds.map((feed , key) =>(\n            <div key = {\n              feed.url ? 'gif'+feed.id : 'article'+feed.id\n            }>\n            <Feeds \n            id={feed.id} \n            article = {feed.article}  \n            title={feed.title} \n            url={feed.url}\n            date={feed.createdon}\n            authorId={feed.authorid}/>\n            </div>\n            )):<div className='sweet-loading' style={{margin:'20% 50%'}}>\n            <ClipLoader\n             //css={override}\n              sizeUnit={\"px\"}\n               size={200}\n              color={'#0659FB'}\n               loading={this.state.loading}\n               />\n      </div> \n            }\n            </div>\n          </React.Fragment>\n        )\n    }\n   \n        \n}\n\nexport default myposts\n\n","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\nimport Login from './components/pages/login/login';\nimport Dashboard from './components/pages/dashboard/dashboard';\nimport Footer from './components/layout/Footer';\nimport Createemployeepage from './components/pages/createEmployee/createEmployeePage';\nimport Postarticles from './components/pages/addArticle/addArticle';\nimport Postgifs from './components/pages/addGif/addGif';\nimport PostAgif from './components/pages/addGif/gifadd'\nimport ViewArticle from './components/pages/article/viewArticle'\nimport ViewGif from './components/pages/gif/viewGif'\nimport Myposts from './components/pages/dashboard/myposts'\nimport { addGifUrl   } from './components/apis'\nimport { getToken } from './components/auth'\nimport './App.css';\n\nexport class App extends Component {\n\n    \n    state ={\n        loggedIn:false\n    }\n\n    logOut = () => {\n        localStorage.removeItem('T_T_W');\n       return <Redirect to={\"/login\"}/>\n    }\n\n   \n\n    onChangeGif = (e) => {\n        this.setState({[e.target.name]: e.target.value})    \n\n    }\n\n    addGif = (e) => {\n        e.preventDefault();\n        const token = getToken();\n       \n        \n        fetch(addGifUrl, \n            {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                    \"Authorization\": token\n                },\n                body: JSON.stringify( { \n\n                \n                title: this.state.title,\n                image: this.state.gif,\n                \n            },)\n                })\n    \n                .then(resp => resp.json())\n                .then(data => { console.log(data)})\n                \n    }\n\n\n    //UserName = `${authUser.data.firstname} ${authUser.data.lastname}`\n\n    \n\n\n    render(){\n        return (\n             <React.Fragment>\n               \n            <Router>\n           \n            \n            <Header logout={this.logOut} />\n            \n            <Route exact path=\"/\" component={ Login } />\n            <Route path=\"/login\" component={ Login } />\n\n            <Route exact path=\"/dashboard\"  \n            render={(props) => <Dashboard {...props} logOut={this.logOut} UserName={this.UserName}  />}  />\n\n            <Route exact path=\"/dashboard/myposts\"  \n            render={(props) => <Myposts {...props} logOut={this.logOut} UserName={this.UserName}  />}  />\n\n\n            <Route path=\"/dashboard/createemployee\" \n            render={(props) => <Createemployeepage {...props} logOut = {this.logOut} UserName={this.UserName} />} />\n\n            <Route path=\"/dashboard/postarticle\" \n            render={(props) => <Postarticles {...props} \n            logOut = {this.logOut} title={this.state.title} article={this.state.article} \n            category={this.state.category} onChange={this.onChangeArticle}  onSubmit={this.addArticle}  \n            />} />\n\n            <Route path=\"/dashboard/postgif\" \n            render={(props) => <Postgifs {...props} \n            logOut = {this.logOut} title={this.state.title} gif={this.state.gif} \n            onChange={this.onChangeGif}  onSubmit={this.addGif}  \n            />} />\n\n            <Route path=\"/dashboard/article/:articleid\" \n            component={ ViewArticle } />\n\n            <Route path=\"/dashboard/gif/:gifid\" \n            component={ ViewGif } />\n\n            <Route path=\"/dashboard/addagif\" \n            component={ PostAgif } />\n\n            \n\n            <Footer />\n            \n            </Router>\n                \n            </React.Fragment>\n        )\n    }\n\n   \n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}